#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2823155123848402991) {
   out_2823155123848402991[0] = 0;
   out_2823155123848402991[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2823155123848402991[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2823155123848402991[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2823155123848402991[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2823155123848402991[5] = -sin(in_vec[1]);
   out_2823155123848402991[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2823155123848402991[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2823155123848402991[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2823155123848402991[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2823155123848402991[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2823155123848402991[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2823155123848402991[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2823155123848402991[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2823155123848402991[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2823155123848402991[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2823155123848402991[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2823155123848402991[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7226446291374266530) {
   out_7226446291374266530[0] = delta_x[0] + nom_x[0];
   out_7226446291374266530[1] = delta_x[1] + nom_x[1];
   out_7226446291374266530[2] = delta_x[2] + nom_x[2];
   out_7226446291374266530[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7226446291374266530[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7226446291374266530[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7226446291374266530[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7226446291374266530[7] = delta_x[6] + nom_x[7];
   out_7226446291374266530[8] = delta_x[7] + nom_x[8];
   out_7226446291374266530[9] = delta_x[8] + nom_x[9];
   out_7226446291374266530[10] = delta_x[9] + nom_x[10];
   out_7226446291374266530[11] = delta_x[10] + nom_x[11];
   out_7226446291374266530[12] = delta_x[11] + nom_x[12];
   out_7226446291374266530[13] = delta_x[12] + nom_x[13];
   out_7226446291374266530[14] = delta_x[13] + nom_x[14];
   out_7226446291374266530[15] = delta_x[14] + nom_x[15];
   out_7226446291374266530[16] = delta_x[15] + nom_x[16];
   out_7226446291374266530[17] = delta_x[16] + nom_x[17];
   out_7226446291374266530[18] = delta_x[17] + nom_x[18];
   out_7226446291374266530[19] = delta_x[18] + nom_x[19];
   out_7226446291374266530[20] = delta_x[19] + nom_x[20];
   out_7226446291374266530[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3650096757331326943) {
   out_3650096757331326943[0] = -nom_x[0] + true_x[0];
   out_3650096757331326943[1] = -nom_x[1] + true_x[1];
   out_3650096757331326943[2] = -nom_x[2] + true_x[2];
   out_3650096757331326943[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3650096757331326943[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3650096757331326943[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3650096757331326943[6] = -nom_x[7] + true_x[7];
   out_3650096757331326943[7] = -nom_x[8] + true_x[8];
   out_3650096757331326943[8] = -nom_x[9] + true_x[9];
   out_3650096757331326943[9] = -nom_x[10] + true_x[10];
   out_3650096757331326943[10] = -nom_x[11] + true_x[11];
   out_3650096757331326943[11] = -nom_x[12] + true_x[12];
   out_3650096757331326943[12] = -nom_x[13] + true_x[13];
   out_3650096757331326943[13] = -nom_x[14] + true_x[14];
   out_3650096757331326943[14] = -nom_x[15] + true_x[15];
   out_3650096757331326943[15] = -nom_x[16] + true_x[16];
   out_3650096757331326943[16] = -nom_x[17] + true_x[17];
   out_3650096757331326943[17] = -nom_x[18] + true_x[18];
   out_3650096757331326943[18] = -nom_x[19] + true_x[19];
   out_3650096757331326943[19] = -nom_x[20] + true_x[20];
   out_3650096757331326943[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1017595647546641607) {
   out_1017595647546641607[0] = 1.0;
   out_1017595647546641607[1] = 0;
   out_1017595647546641607[2] = 0;
   out_1017595647546641607[3] = 0;
   out_1017595647546641607[4] = 0;
   out_1017595647546641607[5] = 0;
   out_1017595647546641607[6] = 0;
   out_1017595647546641607[7] = 0;
   out_1017595647546641607[8] = 0;
   out_1017595647546641607[9] = 0;
   out_1017595647546641607[10] = 0;
   out_1017595647546641607[11] = 0;
   out_1017595647546641607[12] = 0;
   out_1017595647546641607[13] = 0;
   out_1017595647546641607[14] = 0;
   out_1017595647546641607[15] = 0;
   out_1017595647546641607[16] = 0;
   out_1017595647546641607[17] = 0;
   out_1017595647546641607[18] = 0;
   out_1017595647546641607[19] = 0;
   out_1017595647546641607[20] = 0;
   out_1017595647546641607[21] = 0;
   out_1017595647546641607[22] = 1.0;
   out_1017595647546641607[23] = 0;
   out_1017595647546641607[24] = 0;
   out_1017595647546641607[25] = 0;
   out_1017595647546641607[26] = 0;
   out_1017595647546641607[27] = 0;
   out_1017595647546641607[28] = 0;
   out_1017595647546641607[29] = 0;
   out_1017595647546641607[30] = 0;
   out_1017595647546641607[31] = 0;
   out_1017595647546641607[32] = 0;
   out_1017595647546641607[33] = 0;
   out_1017595647546641607[34] = 0;
   out_1017595647546641607[35] = 0;
   out_1017595647546641607[36] = 0;
   out_1017595647546641607[37] = 0;
   out_1017595647546641607[38] = 0;
   out_1017595647546641607[39] = 0;
   out_1017595647546641607[40] = 0;
   out_1017595647546641607[41] = 0;
   out_1017595647546641607[42] = 0;
   out_1017595647546641607[43] = 0;
   out_1017595647546641607[44] = 1.0;
   out_1017595647546641607[45] = 0;
   out_1017595647546641607[46] = 0;
   out_1017595647546641607[47] = 0;
   out_1017595647546641607[48] = 0;
   out_1017595647546641607[49] = 0;
   out_1017595647546641607[50] = 0;
   out_1017595647546641607[51] = 0;
   out_1017595647546641607[52] = 0;
   out_1017595647546641607[53] = 0;
   out_1017595647546641607[54] = 0;
   out_1017595647546641607[55] = 0;
   out_1017595647546641607[56] = 0;
   out_1017595647546641607[57] = 0;
   out_1017595647546641607[58] = 0;
   out_1017595647546641607[59] = 0;
   out_1017595647546641607[60] = 0;
   out_1017595647546641607[61] = 0;
   out_1017595647546641607[62] = 0;
   out_1017595647546641607[63] = 0;
   out_1017595647546641607[64] = 0;
   out_1017595647546641607[65] = 0;
   out_1017595647546641607[66] = -0.5*state[4];
   out_1017595647546641607[67] = -0.5*state[5];
   out_1017595647546641607[68] = -0.5*state[6];
   out_1017595647546641607[69] = 0;
   out_1017595647546641607[70] = 0;
   out_1017595647546641607[71] = 0;
   out_1017595647546641607[72] = 0;
   out_1017595647546641607[73] = 0;
   out_1017595647546641607[74] = 0;
   out_1017595647546641607[75] = 0;
   out_1017595647546641607[76] = 0;
   out_1017595647546641607[77] = 0;
   out_1017595647546641607[78] = 0;
   out_1017595647546641607[79] = 0;
   out_1017595647546641607[80] = 0;
   out_1017595647546641607[81] = 0;
   out_1017595647546641607[82] = 0;
   out_1017595647546641607[83] = 0;
   out_1017595647546641607[84] = 0;
   out_1017595647546641607[85] = 0;
   out_1017595647546641607[86] = 0;
   out_1017595647546641607[87] = 0.5*state[3];
   out_1017595647546641607[88] = 0.5*state[6];
   out_1017595647546641607[89] = -0.5*state[5];
   out_1017595647546641607[90] = 0;
   out_1017595647546641607[91] = 0;
   out_1017595647546641607[92] = 0;
   out_1017595647546641607[93] = 0;
   out_1017595647546641607[94] = 0;
   out_1017595647546641607[95] = 0;
   out_1017595647546641607[96] = 0;
   out_1017595647546641607[97] = 0;
   out_1017595647546641607[98] = 0;
   out_1017595647546641607[99] = 0;
   out_1017595647546641607[100] = 0;
   out_1017595647546641607[101] = 0;
   out_1017595647546641607[102] = 0;
   out_1017595647546641607[103] = 0;
   out_1017595647546641607[104] = 0;
   out_1017595647546641607[105] = 0;
   out_1017595647546641607[106] = 0;
   out_1017595647546641607[107] = 0;
   out_1017595647546641607[108] = -0.5*state[6];
   out_1017595647546641607[109] = 0.5*state[3];
   out_1017595647546641607[110] = 0.5*state[4];
   out_1017595647546641607[111] = 0;
   out_1017595647546641607[112] = 0;
   out_1017595647546641607[113] = 0;
   out_1017595647546641607[114] = 0;
   out_1017595647546641607[115] = 0;
   out_1017595647546641607[116] = 0;
   out_1017595647546641607[117] = 0;
   out_1017595647546641607[118] = 0;
   out_1017595647546641607[119] = 0;
   out_1017595647546641607[120] = 0;
   out_1017595647546641607[121] = 0;
   out_1017595647546641607[122] = 0;
   out_1017595647546641607[123] = 0;
   out_1017595647546641607[124] = 0;
   out_1017595647546641607[125] = 0;
   out_1017595647546641607[126] = 0;
   out_1017595647546641607[127] = 0;
   out_1017595647546641607[128] = 0;
   out_1017595647546641607[129] = 0.5*state[5];
   out_1017595647546641607[130] = -0.5*state[4];
   out_1017595647546641607[131] = 0.5*state[3];
   out_1017595647546641607[132] = 0;
   out_1017595647546641607[133] = 0;
   out_1017595647546641607[134] = 0;
   out_1017595647546641607[135] = 0;
   out_1017595647546641607[136] = 0;
   out_1017595647546641607[137] = 0;
   out_1017595647546641607[138] = 0;
   out_1017595647546641607[139] = 0;
   out_1017595647546641607[140] = 0;
   out_1017595647546641607[141] = 0;
   out_1017595647546641607[142] = 0;
   out_1017595647546641607[143] = 0;
   out_1017595647546641607[144] = 0;
   out_1017595647546641607[145] = 0;
   out_1017595647546641607[146] = 0;
   out_1017595647546641607[147] = 0;
   out_1017595647546641607[148] = 0;
   out_1017595647546641607[149] = 0;
   out_1017595647546641607[150] = 0;
   out_1017595647546641607[151] = 0;
   out_1017595647546641607[152] = 0;
   out_1017595647546641607[153] = 1.0;
   out_1017595647546641607[154] = 0;
   out_1017595647546641607[155] = 0;
   out_1017595647546641607[156] = 0;
   out_1017595647546641607[157] = 0;
   out_1017595647546641607[158] = 0;
   out_1017595647546641607[159] = 0;
   out_1017595647546641607[160] = 0;
   out_1017595647546641607[161] = 0;
   out_1017595647546641607[162] = 0;
   out_1017595647546641607[163] = 0;
   out_1017595647546641607[164] = 0;
   out_1017595647546641607[165] = 0;
   out_1017595647546641607[166] = 0;
   out_1017595647546641607[167] = 0;
   out_1017595647546641607[168] = 0;
   out_1017595647546641607[169] = 0;
   out_1017595647546641607[170] = 0;
   out_1017595647546641607[171] = 0;
   out_1017595647546641607[172] = 0;
   out_1017595647546641607[173] = 0;
   out_1017595647546641607[174] = 0;
   out_1017595647546641607[175] = 1.0;
   out_1017595647546641607[176] = 0;
   out_1017595647546641607[177] = 0;
   out_1017595647546641607[178] = 0;
   out_1017595647546641607[179] = 0;
   out_1017595647546641607[180] = 0;
   out_1017595647546641607[181] = 0;
   out_1017595647546641607[182] = 0;
   out_1017595647546641607[183] = 0;
   out_1017595647546641607[184] = 0;
   out_1017595647546641607[185] = 0;
   out_1017595647546641607[186] = 0;
   out_1017595647546641607[187] = 0;
   out_1017595647546641607[188] = 0;
   out_1017595647546641607[189] = 0;
   out_1017595647546641607[190] = 0;
   out_1017595647546641607[191] = 0;
   out_1017595647546641607[192] = 0;
   out_1017595647546641607[193] = 0;
   out_1017595647546641607[194] = 0;
   out_1017595647546641607[195] = 0;
   out_1017595647546641607[196] = 0;
   out_1017595647546641607[197] = 1.0;
   out_1017595647546641607[198] = 0;
   out_1017595647546641607[199] = 0;
   out_1017595647546641607[200] = 0;
   out_1017595647546641607[201] = 0;
   out_1017595647546641607[202] = 0;
   out_1017595647546641607[203] = 0;
   out_1017595647546641607[204] = 0;
   out_1017595647546641607[205] = 0;
   out_1017595647546641607[206] = 0;
   out_1017595647546641607[207] = 0;
   out_1017595647546641607[208] = 0;
   out_1017595647546641607[209] = 0;
   out_1017595647546641607[210] = 0;
   out_1017595647546641607[211] = 0;
   out_1017595647546641607[212] = 0;
   out_1017595647546641607[213] = 0;
   out_1017595647546641607[214] = 0;
   out_1017595647546641607[215] = 0;
   out_1017595647546641607[216] = 0;
   out_1017595647546641607[217] = 0;
   out_1017595647546641607[218] = 0;
   out_1017595647546641607[219] = 1.0;
   out_1017595647546641607[220] = 0;
   out_1017595647546641607[221] = 0;
   out_1017595647546641607[222] = 0;
   out_1017595647546641607[223] = 0;
   out_1017595647546641607[224] = 0;
   out_1017595647546641607[225] = 0;
   out_1017595647546641607[226] = 0;
   out_1017595647546641607[227] = 0;
   out_1017595647546641607[228] = 0;
   out_1017595647546641607[229] = 0;
   out_1017595647546641607[230] = 0;
   out_1017595647546641607[231] = 0;
   out_1017595647546641607[232] = 0;
   out_1017595647546641607[233] = 0;
   out_1017595647546641607[234] = 0;
   out_1017595647546641607[235] = 0;
   out_1017595647546641607[236] = 0;
   out_1017595647546641607[237] = 0;
   out_1017595647546641607[238] = 0;
   out_1017595647546641607[239] = 0;
   out_1017595647546641607[240] = 0;
   out_1017595647546641607[241] = 1.0;
   out_1017595647546641607[242] = 0;
   out_1017595647546641607[243] = 0;
   out_1017595647546641607[244] = 0;
   out_1017595647546641607[245] = 0;
   out_1017595647546641607[246] = 0;
   out_1017595647546641607[247] = 0;
   out_1017595647546641607[248] = 0;
   out_1017595647546641607[249] = 0;
   out_1017595647546641607[250] = 0;
   out_1017595647546641607[251] = 0;
   out_1017595647546641607[252] = 0;
   out_1017595647546641607[253] = 0;
   out_1017595647546641607[254] = 0;
   out_1017595647546641607[255] = 0;
   out_1017595647546641607[256] = 0;
   out_1017595647546641607[257] = 0;
   out_1017595647546641607[258] = 0;
   out_1017595647546641607[259] = 0;
   out_1017595647546641607[260] = 0;
   out_1017595647546641607[261] = 0;
   out_1017595647546641607[262] = 0;
   out_1017595647546641607[263] = 1.0;
   out_1017595647546641607[264] = 0;
   out_1017595647546641607[265] = 0;
   out_1017595647546641607[266] = 0;
   out_1017595647546641607[267] = 0;
   out_1017595647546641607[268] = 0;
   out_1017595647546641607[269] = 0;
   out_1017595647546641607[270] = 0;
   out_1017595647546641607[271] = 0;
   out_1017595647546641607[272] = 0;
   out_1017595647546641607[273] = 0;
   out_1017595647546641607[274] = 0;
   out_1017595647546641607[275] = 0;
   out_1017595647546641607[276] = 0;
   out_1017595647546641607[277] = 0;
   out_1017595647546641607[278] = 0;
   out_1017595647546641607[279] = 0;
   out_1017595647546641607[280] = 0;
   out_1017595647546641607[281] = 0;
   out_1017595647546641607[282] = 0;
   out_1017595647546641607[283] = 0;
   out_1017595647546641607[284] = 0;
   out_1017595647546641607[285] = 1.0;
   out_1017595647546641607[286] = 0;
   out_1017595647546641607[287] = 0;
   out_1017595647546641607[288] = 0;
   out_1017595647546641607[289] = 0;
   out_1017595647546641607[290] = 0;
   out_1017595647546641607[291] = 0;
   out_1017595647546641607[292] = 0;
   out_1017595647546641607[293] = 0;
   out_1017595647546641607[294] = 0;
   out_1017595647546641607[295] = 0;
   out_1017595647546641607[296] = 0;
   out_1017595647546641607[297] = 0;
   out_1017595647546641607[298] = 0;
   out_1017595647546641607[299] = 0;
   out_1017595647546641607[300] = 0;
   out_1017595647546641607[301] = 0;
   out_1017595647546641607[302] = 0;
   out_1017595647546641607[303] = 0;
   out_1017595647546641607[304] = 0;
   out_1017595647546641607[305] = 0;
   out_1017595647546641607[306] = 0;
   out_1017595647546641607[307] = 1.0;
   out_1017595647546641607[308] = 0;
   out_1017595647546641607[309] = 0;
   out_1017595647546641607[310] = 0;
   out_1017595647546641607[311] = 0;
   out_1017595647546641607[312] = 0;
   out_1017595647546641607[313] = 0;
   out_1017595647546641607[314] = 0;
   out_1017595647546641607[315] = 0;
   out_1017595647546641607[316] = 0;
   out_1017595647546641607[317] = 0;
   out_1017595647546641607[318] = 0;
   out_1017595647546641607[319] = 0;
   out_1017595647546641607[320] = 0;
   out_1017595647546641607[321] = 0;
   out_1017595647546641607[322] = 0;
   out_1017595647546641607[323] = 0;
   out_1017595647546641607[324] = 0;
   out_1017595647546641607[325] = 0;
   out_1017595647546641607[326] = 0;
   out_1017595647546641607[327] = 0;
   out_1017595647546641607[328] = 0;
   out_1017595647546641607[329] = 1.0;
   out_1017595647546641607[330] = 0;
   out_1017595647546641607[331] = 0;
   out_1017595647546641607[332] = 0;
   out_1017595647546641607[333] = 0;
   out_1017595647546641607[334] = 0;
   out_1017595647546641607[335] = 0;
   out_1017595647546641607[336] = 0;
   out_1017595647546641607[337] = 0;
   out_1017595647546641607[338] = 0;
   out_1017595647546641607[339] = 0;
   out_1017595647546641607[340] = 0;
   out_1017595647546641607[341] = 0;
   out_1017595647546641607[342] = 0;
   out_1017595647546641607[343] = 0;
   out_1017595647546641607[344] = 0;
   out_1017595647546641607[345] = 0;
   out_1017595647546641607[346] = 0;
   out_1017595647546641607[347] = 0;
   out_1017595647546641607[348] = 0;
   out_1017595647546641607[349] = 0;
   out_1017595647546641607[350] = 0;
   out_1017595647546641607[351] = 1.0;
   out_1017595647546641607[352] = 0;
   out_1017595647546641607[353] = 0;
   out_1017595647546641607[354] = 0;
   out_1017595647546641607[355] = 0;
   out_1017595647546641607[356] = 0;
   out_1017595647546641607[357] = 0;
   out_1017595647546641607[358] = 0;
   out_1017595647546641607[359] = 0;
   out_1017595647546641607[360] = 0;
   out_1017595647546641607[361] = 0;
   out_1017595647546641607[362] = 0;
   out_1017595647546641607[363] = 0;
   out_1017595647546641607[364] = 0;
   out_1017595647546641607[365] = 0;
   out_1017595647546641607[366] = 0;
   out_1017595647546641607[367] = 0;
   out_1017595647546641607[368] = 0;
   out_1017595647546641607[369] = 0;
   out_1017595647546641607[370] = 0;
   out_1017595647546641607[371] = 0;
   out_1017595647546641607[372] = 0;
   out_1017595647546641607[373] = 1.0;
   out_1017595647546641607[374] = 0;
   out_1017595647546641607[375] = 0;
   out_1017595647546641607[376] = 0;
   out_1017595647546641607[377] = 0;
   out_1017595647546641607[378] = 0;
   out_1017595647546641607[379] = 0;
   out_1017595647546641607[380] = 0;
   out_1017595647546641607[381] = 0;
   out_1017595647546641607[382] = 0;
   out_1017595647546641607[383] = 0;
   out_1017595647546641607[384] = 0;
   out_1017595647546641607[385] = 0;
   out_1017595647546641607[386] = 0;
   out_1017595647546641607[387] = 0;
   out_1017595647546641607[388] = 0;
   out_1017595647546641607[389] = 0;
   out_1017595647546641607[390] = 0;
   out_1017595647546641607[391] = 0;
   out_1017595647546641607[392] = 0;
   out_1017595647546641607[393] = 0;
   out_1017595647546641607[394] = 0;
   out_1017595647546641607[395] = 1.0;
   out_1017595647546641607[396] = 0;
   out_1017595647546641607[397] = 0;
   out_1017595647546641607[398] = 0;
   out_1017595647546641607[399] = 0;
   out_1017595647546641607[400] = 0;
   out_1017595647546641607[401] = 0;
   out_1017595647546641607[402] = 0;
   out_1017595647546641607[403] = 0;
   out_1017595647546641607[404] = 0;
   out_1017595647546641607[405] = 0;
   out_1017595647546641607[406] = 0;
   out_1017595647546641607[407] = 0;
   out_1017595647546641607[408] = 0;
   out_1017595647546641607[409] = 0;
   out_1017595647546641607[410] = 0;
   out_1017595647546641607[411] = 0;
   out_1017595647546641607[412] = 0;
   out_1017595647546641607[413] = 0;
   out_1017595647546641607[414] = 0;
   out_1017595647546641607[415] = 0;
   out_1017595647546641607[416] = 0;
   out_1017595647546641607[417] = 1.0;
   out_1017595647546641607[418] = 0;
   out_1017595647546641607[419] = 0;
   out_1017595647546641607[420] = 0;
   out_1017595647546641607[421] = 0;
   out_1017595647546641607[422] = 0;
   out_1017595647546641607[423] = 0;
   out_1017595647546641607[424] = 0;
   out_1017595647546641607[425] = 0;
   out_1017595647546641607[426] = 0;
   out_1017595647546641607[427] = 0;
   out_1017595647546641607[428] = 0;
   out_1017595647546641607[429] = 0;
   out_1017595647546641607[430] = 0;
   out_1017595647546641607[431] = 0;
   out_1017595647546641607[432] = 0;
   out_1017595647546641607[433] = 0;
   out_1017595647546641607[434] = 0;
   out_1017595647546641607[435] = 0;
   out_1017595647546641607[436] = 0;
   out_1017595647546641607[437] = 0;
   out_1017595647546641607[438] = 0;
   out_1017595647546641607[439] = 1.0;
   out_1017595647546641607[440] = 0;
   out_1017595647546641607[441] = 0;
   out_1017595647546641607[442] = 0;
   out_1017595647546641607[443] = 0;
   out_1017595647546641607[444] = 0;
   out_1017595647546641607[445] = 0;
   out_1017595647546641607[446] = 0;
   out_1017595647546641607[447] = 0;
   out_1017595647546641607[448] = 0;
   out_1017595647546641607[449] = 0;
   out_1017595647546641607[450] = 0;
   out_1017595647546641607[451] = 0;
   out_1017595647546641607[452] = 0;
   out_1017595647546641607[453] = 0;
   out_1017595647546641607[454] = 0;
   out_1017595647546641607[455] = 0;
   out_1017595647546641607[456] = 0;
   out_1017595647546641607[457] = 0;
   out_1017595647546641607[458] = 0;
   out_1017595647546641607[459] = 0;
   out_1017595647546641607[460] = 0;
   out_1017595647546641607[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1572252167703847428) {
   out_1572252167703847428[0] = dt*state[7] + state[0];
   out_1572252167703847428[1] = dt*state[8] + state[1];
   out_1572252167703847428[2] = dt*state[9] + state[2];
   out_1572252167703847428[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1572252167703847428[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1572252167703847428[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1572252167703847428[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1572252167703847428[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1572252167703847428[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1572252167703847428[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1572252167703847428[10] = state[10];
   out_1572252167703847428[11] = state[11];
   out_1572252167703847428[12] = state[12];
   out_1572252167703847428[13] = state[13];
   out_1572252167703847428[14] = state[14];
   out_1572252167703847428[15] = state[15];
   out_1572252167703847428[16] = state[16];
   out_1572252167703847428[17] = state[17];
   out_1572252167703847428[18] = state[18];
   out_1572252167703847428[19] = state[19];
   out_1572252167703847428[20] = state[20];
   out_1572252167703847428[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4661722811712315816) {
   out_4661722811712315816[0] = 1;
   out_4661722811712315816[1] = 0;
   out_4661722811712315816[2] = 0;
   out_4661722811712315816[3] = 0;
   out_4661722811712315816[4] = 0;
   out_4661722811712315816[5] = 0;
   out_4661722811712315816[6] = dt;
   out_4661722811712315816[7] = 0;
   out_4661722811712315816[8] = 0;
   out_4661722811712315816[9] = 0;
   out_4661722811712315816[10] = 0;
   out_4661722811712315816[11] = 0;
   out_4661722811712315816[12] = 0;
   out_4661722811712315816[13] = 0;
   out_4661722811712315816[14] = 0;
   out_4661722811712315816[15] = 0;
   out_4661722811712315816[16] = 0;
   out_4661722811712315816[17] = 0;
   out_4661722811712315816[18] = 0;
   out_4661722811712315816[19] = 0;
   out_4661722811712315816[20] = 0;
   out_4661722811712315816[21] = 0;
   out_4661722811712315816[22] = 1;
   out_4661722811712315816[23] = 0;
   out_4661722811712315816[24] = 0;
   out_4661722811712315816[25] = 0;
   out_4661722811712315816[26] = 0;
   out_4661722811712315816[27] = 0;
   out_4661722811712315816[28] = dt;
   out_4661722811712315816[29] = 0;
   out_4661722811712315816[30] = 0;
   out_4661722811712315816[31] = 0;
   out_4661722811712315816[32] = 0;
   out_4661722811712315816[33] = 0;
   out_4661722811712315816[34] = 0;
   out_4661722811712315816[35] = 0;
   out_4661722811712315816[36] = 0;
   out_4661722811712315816[37] = 0;
   out_4661722811712315816[38] = 0;
   out_4661722811712315816[39] = 0;
   out_4661722811712315816[40] = 0;
   out_4661722811712315816[41] = 0;
   out_4661722811712315816[42] = 0;
   out_4661722811712315816[43] = 0;
   out_4661722811712315816[44] = 1;
   out_4661722811712315816[45] = 0;
   out_4661722811712315816[46] = 0;
   out_4661722811712315816[47] = 0;
   out_4661722811712315816[48] = 0;
   out_4661722811712315816[49] = 0;
   out_4661722811712315816[50] = dt;
   out_4661722811712315816[51] = 0;
   out_4661722811712315816[52] = 0;
   out_4661722811712315816[53] = 0;
   out_4661722811712315816[54] = 0;
   out_4661722811712315816[55] = 0;
   out_4661722811712315816[56] = 0;
   out_4661722811712315816[57] = 0;
   out_4661722811712315816[58] = 0;
   out_4661722811712315816[59] = 0;
   out_4661722811712315816[60] = 0;
   out_4661722811712315816[61] = 0;
   out_4661722811712315816[62] = 0;
   out_4661722811712315816[63] = 0;
   out_4661722811712315816[64] = 0;
   out_4661722811712315816[65] = 0;
   out_4661722811712315816[66] = 1;
   out_4661722811712315816[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4661722811712315816[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4661722811712315816[69] = 0;
   out_4661722811712315816[70] = 0;
   out_4661722811712315816[71] = 0;
   out_4661722811712315816[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4661722811712315816[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4661722811712315816[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4661722811712315816[75] = 0;
   out_4661722811712315816[76] = 0;
   out_4661722811712315816[77] = 0;
   out_4661722811712315816[78] = 0;
   out_4661722811712315816[79] = 0;
   out_4661722811712315816[80] = 0;
   out_4661722811712315816[81] = 0;
   out_4661722811712315816[82] = 0;
   out_4661722811712315816[83] = 0;
   out_4661722811712315816[84] = 0;
   out_4661722811712315816[85] = 0;
   out_4661722811712315816[86] = 0;
   out_4661722811712315816[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4661722811712315816[88] = 1;
   out_4661722811712315816[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4661722811712315816[90] = 0;
   out_4661722811712315816[91] = 0;
   out_4661722811712315816[92] = 0;
   out_4661722811712315816[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4661722811712315816[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4661722811712315816[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4661722811712315816[96] = 0;
   out_4661722811712315816[97] = 0;
   out_4661722811712315816[98] = 0;
   out_4661722811712315816[99] = 0;
   out_4661722811712315816[100] = 0;
   out_4661722811712315816[101] = 0;
   out_4661722811712315816[102] = 0;
   out_4661722811712315816[103] = 0;
   out_4661722811712315816[104] = 0;
   out_4661722811712315816[105] = 0;
   out_4661722811712315816[106] = 0;
   out_4661722811712315816[107] = 0;
   out_4661722811712315816[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4661722811712315816[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4661722811712315816[110] = 1;
   out_4661722811712315816[111] = 0;
   out_4661722811712315816[112] = 0;
   out_4661722811712315816[113] = 0;
   out_4661722811712315816[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4661722811712315816[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4661722811712315816[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4661722811712315816[117] = 0;
   out_4661722811712315816[118] = 0;
   out_4661722811712315816[119] = 0;
   out_4661722811712315816[120] = 0;
   out_4661722811712315816[121] = 0;
   out_4661722811712315816[122] = 0;
   out_4661722811712315816[123] = 0;
   out_4661722811712315816[124] = 0;
   out_4661722811712315816[125] = 0;
   out_4661722811712315816[126] = 0;
   out_4661722811712315816[127] = 0;
   out_4661722811712315816[128] = 0;
   out_4661722811712315816[129] = 0;
   out_4661722811712315816[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4661722811712315816[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4661722811712315816[132] = 1;
   out_4661722811712315816[133] = 0;
   out_4661722811712315816[134] = 0;
   out_4661722811712315816[135] = 0;
   out_4661722811712315816[136] = 0;
   out_4661722811712315816[137] = 0;
   out_4661722811712315816[138] = 0;
   out_4661722811712315816[139] = 0;
   out_4661722811712315816[140] = 0;
   out_4661722811712315816[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4661722811712315816[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4661722811712315816[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4661722811712315816[144] = 0;
   out_4661722811712315816[145] = 0;
   out_4661722811712315816[146] = 0;
   out_4661722811712315816[147] = 0;
   out_4661722811712315816[148] = 0;
   out_4661722811712315816[149] = 0;
   out_4661722811712315816[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4661722811712315816[151] = 0;
   out_4661722811712315816[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4661722811712315816[153] = 0;
   out_4661722811712315816[154] = 1;
   out_4661722811712315816[155] = 0;
   out_4661722811712315816[156] = 0;
   out_4661722811712315816[157] = 0;
   out_4661722811712315816[158] = 0;
   out_4661722811712315816[159] = 0;
   out_4661722811712315816[160] = 0;
   out_4661722811712315816[161] = 0;
   out_4661722811712315816[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4661722811712315816[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4661722811712315816[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4661722811712315816[165] = 0;
   out_4661722811712315816[166] = 0;
   out_4661722811712315816[167] = 0;
   out_4661722811712315816[168] = 0;
   out_4661722811712315816[169] = 0;
   out_4661722811712315816[170] = 0;
   out_4661722811712315816[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4661722811712315816[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4661722811712315816[173] = 0;
   out_4661722811712315816[174] = 0;
   out_4661722811712315816[175] = 0;
   out_4661722811712315816[176] = 1;
   out_4661722811712315816[177] = 0;
   out_4661722811712315816[178] = 0;
   out_4661722811712315816[179] = 0;
   out_4661722811712315816[180] = 0;
   out_4661722811712315816[181] = 0;
   out_4661722811712315816[182] = 0;
   out_4661722811712315816[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4661722811712315816[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4661722811712315816[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4661722811712315816[186] = 0;
   out_4661722811712315816[187] = 0;
   out_4661722811712315816[188] = 0;
   out_4661722811712315816[189] = 0;
   out_4661722811712315816[190] = 0;
   out_4661722811712315816[191] = 0;
   out_4661722811712315816[192] = 0;
   out_4661722811712315816[193] = 0;
   out_4661722811712315816[194] = 0;
   out_4661722811712315816[195] = 0;
   out_4661722811712315816[196] = 0;
   out_4661722811712315816[197] = 0;
   out_4661722811712315816[198] = 1;
   out_4661722811712315816[199] = 0;
   out_4661722811712315816[200] = 0;
   out_4661722811712315816[201] = 0;
   out_4661722811712315816[202] = 0;
   out_4661722811712315816[203] = 0;
   out_4661722811712315816[204] = 0;
   out_4661722811712315816[205] = 0;
   out_4661722811712315816[206] = 0;
   out_4661722811712315816[207] = 0;
   out_4661722811712315816[208] = 0;
   out_4661722811712315816[209] = 0;
   out_4661722811712315816[210] = 0;
   out_4661722811712315816[211] = 0;
   out_4661722811712315816[212] = 0;
   out_4661722811712315816[213] = 0;
   out_4661722811712315816[214] = 0;
   out_4661722811712315816[215] = 0;
   out_4661722811712315816[216] = 0;
   out_4661722811712315816[217] = 0;
   out_4661722811712315816[218] = 0;
   out_4661722811712315816[219] = 0;
   out_4661722811712315816[220] = 1;
   out_4661722811712315816[221] = 0;
   out_4661722811712315816[222] = 0;
   out_4661722811712315816[223] = 0;
   out_4661722811712315816[224] = 0;
   out_4661722811712315816[225] = 0;
   out_4661722811712315816[226] = 0;
   out_4661722811712315816[227] = 0;
   out_4661722811712315816[228] = 0;
   out_4661722811712315816[229] = 0;
   out_4661722811712315816[230] = 0;
   out_4661722811712315816[231] = 0;
   out_4661722811712315816[232] = 0;
   out_4661722811712315816[233] = 0;
   out_4661722811712315816[234] = 0;
   out_4661722811712315816[235] = 0;
   out_4661722811712315816[236] = 0;
   out_4661722811712315816[237] = 0;
   out_4661722811712315816[238] = 0;
   out_4661722811712315816[239] = 0;
   out_4661722811712315816[240] = 0;
   out_4661722811712315816[241] = 0;
   out_4661722811712315816[242] = 1;
   out_4661722811712315816[243] = 0;
   out_4661722811712315816[244] = 0;
   out_4661722811712315816[245] = 0;
   out_4661722811712315816[246] = 0;
   out_4661722811712315816[247] = 0;
   out_4661722811712315816[248] = 0;
   out_4661722811712315816[249] = 0;
   out_4661722811712315816[250] = 0;
   out_4661722811712315816[251] = 0;
   out_4661722811712315816[252] = 0;
   out_4661722811712315816[253] = 0;
   out_4661722811712315816[254] = 0;
   out_4661722811712315816[255] = 0;
   out_4661722811712315816[256] = 0;
   out_4661722811712315816[257] = 0;
   out_4661722811712315816[258] = 0;
   out_4661722811712315816[259] = 0;
   out_4661722811712315816[260] = 0;
   out_4661722811712315816[261] = 0;
   out_4661722811712315816[262] = 0;
   out_4661722811712315816[263] = 0;
   out_4661722811712315816[264] = 1;
   out_4661722811712315816[265] = 0;
   out_4661722811712315816[266] = 0;
   out_4661722811712315816[267] = 0;
   out_4661722811712315816[268] = 0;
   out_4661722811712315816[269] = 0;
   out_4661722811712315816[270] = 0;
   out_4661722811712315816[271] = 0;
   out_4661722811712315816[272] = 0;
   out_4661722811712315816[273] = 0;
   out_4661722811712315816[274] = 0;
   out_4661722811712315816[275] = 0;
   out_4661722811712315816[276] = 0;
   out_4661722811712315816[277] = 0;
   out_4661722811712315816[278] = 0;
   out_4661722811712315816[279] = 0;
   out_4661722811712315816[280] = 0;
   out_4661722811712315816[281] = 0;
   out_4661722811712315816[282] = 0;
   out_4661722811712315816[283] = 0;
   out_4661722811712315816[284] = 0;
   out_4661722811712315816[285] = 0;
   out_4661722811712315816[286] = 1;
   out_4661722811712315816[287] = 0;
   out_4661722811712315816[288] = 0;
   out_4661722811712315816[289] = 0;
   out_4661722811712315816[290] = 0;
   out_4661722811712315816[291] = 0;
   out_4661722811712315816[292] = 0;
   out_4661722811712315816[293] = 0;
   out_4661722811712315816[294] = 0;
   out_4661722811712315816[295] = 0;
   out_4661722811712315816[296] = 0;
   out_4661722811712315816[297] = 0;
   out_4661722811712315816[298] = 0;
   out_4661722811712315816[299] = 0;
   out_4661722811712315816[300] = 0;
   out_4661722811712315816[301] = 0;
   out_4661722811712315816[302] = 0;
   out_4661722811712315816[303] = 0;
   out_4661722811712315816[304] = 0;
   out_4661722811712315816[305] = 0;
   out_4661722811712315816[306] = 0;
   out_4661722811712315816[307] = 0;
   out_4661722811712315816[308] = 1;
   out_4661722811712315816[309] = 0;
   out_4661722811712315816[310] = 0;
   out_4661722811712315816[311] = 0;
   out_4661722811712315816[312] = 0;
   out_4661722811712315816[313] = 0;
   out_4661722811712315816[314] = 0;
   out_4661722811712315816[315] = 0;
   out_4661722811712315816[316] = 0;
   out_4661722811712315816[317] = 0;
   out_4661722811712315816[318] = 0;
   out_4661722811712315816[319] = 0;
   out_4661722811712315816[320] = 0;
   out_4661722811712315816[321] = 0;
   out_4661722811712315816[322] = 0;
   out_4661722811712315816[323] = 0;
   out_4661722811712315816[324] = 0;
   out_4661722811712315816[325] = 0;
   out_4661722811712315816[326] = 0;
   out_4661722811712315816[327] = 0;
   out_4661722811712315816[328] = 0;
   out_4661722811712315816[329] = 0;
   out_4661722811712315816[330] = 1;
   out_4661722811712315816[331] = 0;
   out_4661722811712315816[332] = 0;
   out_4661722811712315816[333] = 0;
   out_4661722811712315816[334] = 0;
   out_4661722811712315816[335] = 0;
   out_4661722811712315816[336] = 0;
   out_4661722811712315816[337] = 0;
   out_4661722811712315816[338] = 0;
   out_4661722811712315816[339] = 0;
   out_4661722811712315816[340] = 0;
   out_4661722811712315816[341] = 0;
   out_4661722811712315816[342] = 0;
   out_4661722811712315816[343] = 0;
   out_4661722811712315816[344] = 0;
   out_4661722811712315816[345] = 0;
   out_4661722811712315816[346] = 0;
   out_4661722811712315816[347] = 0;
   out_4661722811712315816[348] = 0;
   out_4661722811712315816[349] = 0;
   out_4661722811712315816[350] = 0;
   out_4661722811712315816[351] = 0;
   out_4661722811712315816[352] = 1;
   out_4661722811712315816[353] = 0;
   out_4661722811712315816[354] = 0;
   out_4661722811712315816[355] = 0;
   out_4661722811712315816[356] = 0;
   out_4661722811712315816[357] = 0;
   out_4661722811712315816[358] = 0;
   out_4661722811712315816[359] = 0;
   out_4661722811712315816[360] = 0;
   out_4661722811712315816[361] = 0;
   out_4661722811712315816[362] = 0;
   out_4661722811712315816[363] = 0;
   out_4661722811712315816[364] = 0;
   out_4661722811712315816[365] = 0;
   out_4661722811712315816[366] = 0;
   out_4661722811712315816[367] = 0;
   out_4661722811712315816[368] = 0;
   out_4661722811712315816[369] = 0;
   out_4661722811712315816[370] = 0;
   out_4661722811712315816[371] = 0;
   out_4661722811712315816[372] = 0;
   out_4661722811712315816[373] = 0;
   out_4661722811712315816[374] = 1;
   out_4661722811712315816[375] = 0;
   out_4661722811712315816[376] = 0;
   out_4661722811712315816[377] = 0;
   out_4661722811712315816[378] = 0;
   out_4661722811712315816[379] = 0;
   out_4661722811712315816[380] = 0;
   out_4661722811712315816[381] = 0;
   out_4661722811712315816[382] = 0;
   out_4661722811712315816[383] = 0;
   out_4661722811712315816[384] = 0;
   out_4661722811712315816[385] = 0;
   out_4661722811712315816[386] = 0;
   out_4661722811712315816[387] = 0;
   out_4661722811712315816[388] = 0;
   out_4661722811712315816[389] = 0;
   out_4661722811712315816[390] = 0;
   out_4661722811712315816[391] = 0;
   out_4661722811712315816[392] = 0;
   out_4661722811712315816[393] = 0;
   out_4661722811712315816[394] = 0;
   out_4661722811712315816[395] = 0;
   out_4661722811712315816[396] = 1;
   out_4661722811712315816[397] = 0;
   out_4661722811712315816[398] = 0;
   out_4661722811712315816[399] = 0;
   out_4661722811712315816[400] = 0;
   out_4661722811712315816[401] = 0;
   out_4661722811712315816[402] = 0;
   out_4661722811712315816[403] = 0;
   out_4661722811712315816[404] = 0;
   out_4661722811712315816[405] = 0;
   out_4661722811712315816[406] = 0;
   out_4661722811712315816[407] = 0;
   out_4661722811712315816[408] = 0;
   out_4661722811712315816[409] = 0;
   out_4661722811712315816[410] = 0;
   out_4661722811712315816[411] = 0;
   out_4661722811712315816[412] = 0;
   out_4661722811712315816[413] = 0;
   out_4661722811712315816[414] = 0;
   out_4661722811712315816[415] = 0;
   out_4661722811712315816[416] = 0;
   out_4661722811712315816[417] = 0;
   out_4661722811712315816[418] = 1;
   out_4661722811712315816[419] = 0;
   out_4661722811712315816[420] = 0;
   out_4661722811712315816[421] = 0;
   out_4661722811712315816[422] = 0;
   out_4661722811712315816[423] = 0;
   out_4661722811712315816[424] = 0;
   out_4661722811712315816[425] = 0;
   out_4661722811712315816[426] = 0;
   out_4661722811712315816[427] = 0;
   out_4661722811712315816[428] = 0;
   out_4661722811712315816[429] = 0;
   out_4661722811712315816[430] = 0;
   out_4661722811712315816[431] = 0;
   out_4661722811712315816[432] = 0;
   out_4661722811712315816[433] = 0;
   out_4661722811712315816[434] = 0;
   out_4661722811712315816[435] = 0;
   out_4661722811712315816[436] = 0;
   out_4661722811712315816[437] = 0;
   out_4661722811712315816[438] = 0;
   out_4661722811712315816[439] = 0;
   out_4661722811712315816[440] = 1;
}
void h_4(double *state, double *unused, double *out_301170939575007164) {
   out_301170939575007164[0] = state[10] + state[13];
   out_301170939575007164[1] = state[11] + state[14];
   out_301170939575007164[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4386249715678046629) {
   out_4386249715678046629[0] = 0;
   out_4386249715678046629[1] = 0;
   out_4386249715678046629[2] = 0;
   out_4386249715678046629[3] = 0;
   out_4386249715678046629[4] = 0;
   out_4386249715678046629[5] = 0;
   out_4386249715678046629[6] = 0;
   out_4386249715678046629[7] = 0;
   out_4386249715678046629[8] = 0;
   out_4386249715678046629[9] = 0;
   out_4386249715678046629[10] = 1;
   out_4386249715678046629[11] = 0;
   out_4386249715678046629[12] = 0;
   out_4386249715678046629[13] = 1;
   out_4386249715678046629[14] = 0;
   out_4386249715678046629[15] = 0;
   out_4386249715678046629[16] = 0;
   out_4386249715678046629[17] = 0;
   out_4386249715678046629[18] = 0;
   out_4386249715678046629[19] = 0;
   out_4386249715678046629[20] = 0;
   out_4386249715678046629[21] = 0;
   out_4386249715678046629[22] = 0;
   out_4386249715678046629[23] = 0;
   out_4386249715678046629[24] = 0;
   out_4386249715678046629[25] = 0;
   out_4386249715678046629[26] = 0;
   out_4386249715678046629[27] = 0;
   out_4386249715678046629[28] = 0;
   out_4386249715678046629[29] = 0;
   out_4386249715678046629[30] = 0;
   out_4386249715678046629[31] = 0;
   out_4386249715678046629[32] = 0;
   out_4386249715678046629[33] = 1;
   out_4386249715678046629[34] = 0;
   out_4386249715678046629[35] = 0;
   out_4386249715678046629[36] = 1;
   out_4386249715678046629[37] = 0;
   out_4386249715678046629[38] = 0;
   out_4386249715678046629[39] = 0;
   out_4386249715678046629[40] = 0;
   out_4386249715678046629[41] = 0;
   out_4386249715678046629[42] = 0;
   out_4386249715678046629[43] = 0;
   out_4386249715678046629[44] = 0;
   out_4386249715678046629[45] = 0;
   out_4386249715678046629[46] = 0;
   out_4386249715678046629[47] = 0;
   out_4386249715678046629[48] = 0;
   out_4386249715678046629[49] = 0;
   out_4386249715678046629[50] = 0;
   out_4386249715678046629[51] = 0;
   out_4386249715678046629[52] = 0;
   out_4386249715678046629[53] = 0;
   out_4386249715678046629[54] = 0;
   out_4386249715678046629[55] = 0;
   out_4386249715678046629[56] = 1;
   out_4386249715678046629[57] = 0;
   out_4386249715678046629[58] = 0;
   out_4386249715678046629[59] = 1;
   out_4386249715678046629[60] = 0;
   out_4386249715678046629[61] = 0;
   out_4386249715678046629[62] = 0;
   out_4386249715678046629[63] = 0;
   out_4386249715678046629[64] = 0;
   out_4386249715678046629[65] = 0;
}
void h_9(double *state, double *unused, double *out_8101849099089557939) {
   out_8101849099089557939[0] = state[10];
   out_8101849099089557939[1] = state[11];
   out_8101849099089557939[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6773275422767057517) {
   out_6773275422767057517[0] = 0;
   out_6773275422767057517[1] = 0;
   out_6773275422767057517[2] = 0;
   out_6773275422767057517[3] = 0;
   out_6773275422767057517[4] = 0;
   out_6773275422767057517[5] = 0;
   out_6773275422767057517[6] = 0;
   out_6773275422767057517[7] = 0;
   out_6773275422767057517[8] = 0;
   out_6773275422767057517[9] = 0;
   out_6773275422767057517[10] = 1;
   out_6773275422767057517[11] = 0;
   out_6773275422767057517[12] = 0;
   out_6773275422767057517[13] = 0;
   out_6773275422767057517[14] = 0;
   out_6773275422767057517[15] = 0;
   out_6773275422767057517[16] = 0;
   out_6773275422767057517[17] = 0;
   out_6773275422767057517[18] = 0;
   out_6773275422767057517[19] = 0;
   out_6773275422767057517[20] = 0;
   out_6773275422767057517[21] = 0;
   out_6773275422767057517[22] = 0;
   out_6773275422767057517[23] = 0;
   out_6773275422767057517[24] = 0;
   out_6773275422767057517[25] = 0;
   out_6773275422767057517[26] = 0;
   out_6773275422767057517[27] = 0;
   out_6773275422767057517[28] = 0;
   out_6773275422767057517[29] = 0;
   out_6773275422767057517[30] = 0;
   out_6773275422767057517[31] = 0;
   out_6773275422767057517[32] = 0;
   out_6773275422767057517[33] = 1;
   out_6773275422767057517[34] = 0;
   out_6773275422767057517[35] = 0;
   out_6773275422767057517[36] = 0;
   out_6773275422767057517[37] = 0;
   out_6773275422767057517[38] = 0;
   out_6773275422767057517[39] = 0;
   out_6773275422767057517[40] = 0;
   out_6773275422767057517[41] = 0;
   out_6773275422767057517[42] = 0;
   out_6773275422767057517[43] = 0;
   out_6773275422767057517[44] = 0;
   out_6773275422767057517[45] = 0;
   out_6773275422767057517[46] = 0;
   out_6773275422767057517[47] = 0;
   out_6773275422767057517[48] = 0;
   out_6773275422767057517[49] = 0;
   out_6773275422767057517[50] = 0;
   out_6773275422767057517[51] = 0;
   out_6773275422767057517[52] = 0;
   out_6773275422767057517[53] = 0;
   out_6773275422767057517[54] = 0;
   out_6773275422767057517[55] = 0;
   out_6773275422767057517[56] = 1;
   out_6773275422767057517[57] = 0;
   out_6773275422767057517[58] = 0;
   out_6773275422767057517[59] = 0;
   out_6773275422767057517[60] = 0;
   out_6773275422767057517[61] = 0;
   out_6773275422767057517[62] = 0;
   out_6773275422767057517[63] = 0;
   out_6773275422767057517[64] = 0;
   out_6773275422767057517[65] = 0;
}
void h_10(double *state, double *unused, double *out_2439254096414030147) {
   out_2439254096414030147[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2439254096414030147[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2439254096414030147[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_347608672828194809) {
   out_347608672828194809[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_347608672828194809[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_347608672828194809[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_347608672828194809[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_347608672828194809[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_347608672828194809[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_347608672828194809[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_347608672828194809[7] = 0;
   out_347608672828194809[8] = 0;
   out_347608672828194809[9] = 0;
   out_347608672828194809[10] = 0;
   out_347608672828194809[11] = 0;
   out_347608672828194809[12] = 0;
   out_347608672828194809[13] = 0;
   out_347608672828194809[14] = 0;
   out_347608672828194809[15] = 0;
   out_347608672828194809[16] = 1;
   out_347608672828194809[17] = 0;
   out_347608672828194809[18] = 0;
   out_347608672828194809[19] = 1;
   out_347608672828194809[20] = 0;
   out_347608672828194809[21] = 0;
   out_347608672828194809[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_347608672828194809[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_347608672828194809[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_347608672828194809[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_347608672828194809[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_347608672828194809[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_347608672828194809[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_347608672828194809[29] = 0;
   out_347608672828194809[30] = 0;
   out_347608672828194809[31] = 0;
   out_347608672828194809[32] = 0;
   out_347608672828194809[33] = 0;
   out_347608672828194809[34] = 0;
   out_347608672828194809[35] = 0;
   out_347608672828194809[36] = 0;
   out_347608672828194809[37] = 0;
   out_347608672828194809[38] = 0;
   out_347608672828194809[39] = 1;
   out_347608672828194809[40] = 0;
   out_347608672828194809[41] = 0;
   out_347608672828194809[42] = 1;
   out_347608672828194809[43] = 0;
   out_347608672828194809[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_347608672828194809[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_347608672828194809[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_347608672828194809[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_347608672828194809[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_347608672828194809[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_347608672828194809[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_347608672828194809[51] = 0;
   out_347608672828194809[52] = 0;
   out_347608672828194809[53] = 0;
   out_347608672828194809[54] = 0;
   out_347608672828194809[55] = 0;
   out_347608672828194809[56] = 0;
   out_347608672828194809[57] = 0;
   out_347608672828194809[58] = 0;
   out_347608672828194809[59] = 0;
   out_347608672828194809[60] = 0;
   out_347608672828194809[61] = 0;
   out_347608672828194809[62] = 1;
   out_347608672828194809[63] = 0;
   out_347608672828194809[64] = 0;
   out_347608672828194809[65] = 1;
}
void h_12(double *state, double *unused, double *out_4212404837284500669) {
   out_4212404837284500669[0] = state[0];
   out_4212404837284500669[1] = state[1];
   out_4212404837284500669[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9041037949999543192) {
   out_9041037949999543192[0] = 1;
   out_9041037949999543192[1] = 0;
   out_9041037949999543192[2] = 0;
   out_9041037949999543192[3] = 0;
   out_9041037949999543192[4] = 0;
   out_9041037949999543192[5] = 0;
   out_9041037949999543192[6] = 0;
   out_9041037949999543192[7] = 0;
   out_9041037949999543192[8] = 0;
   out_9041037949999543192[9] = 0;
   out_9041037949999543192[10] = 0;
   out_9041037949999543192[11] = 0;
   out_9041037949999543192[12] = 0;
   out_9041037949999543192[13] = 0;
   out_9041037949999543192[14] = 0;
   out_9041037949999543192[15] = 0;
   out_9041037949999543192[16] = 0;
   out_9041037949999543192[17] = 0;
   out_9041037949999543192[18] = 0;
   out_9041037949999543192[19] = 0;
   out_9041037949999543192[20] = 0;
   out_9041037949999543192[21] = 0;
   out_9041037949999543192[22] = 0;
   out_9041037949999543192[23] = 1;
   out_9041037949999543192[24] = 0;
   out_9041037949999543192[25] = 0;
   out_9041037949999543192[26] = 0;
   out_9041037949999543192[27] = 0;
   out_9041037949999543192[28] = 0;
   out_9041037949999543192[29] = 0;
   out_9041037949999543192[30] = 0;
   out_9041037949999543192[31] = 0;
   out_9041037949999543192[32] = 0;
   out_9041037949999543192[33] = 0;
   out_9041037949999543192[34] = 0;
   out_9041037949999543192[35] = 0;
   out_9041037949999543192[36] = 0;
   out_9041037949999543192[37] = 0;
   out_9041037949999543192[38] = 0;
   out_9041037949999543192[39] = 0;
   out_9041037949999543192[40] = 0;
   out_9041037949999543192[41] = 0;
   out_9041037949999543192[42] = 0;
   out_9041037949999543192[43] = 0;
   out_9041037949999543192[44] = 0;
   out_9041037949999543192[45] = 0;
   out_9041037949999543192[46] = 1;
   out_9041037949999543192[47] = 0;
   out_9041037949999543192[48] = 0;
   out_9041037949999543192[49] = 0;
   out_9041037949999543192[50] = 0;
   out_9041037949999543192[51] = 0;
   out_9041037949999543192[52] = 0;
   out_9041037949999543192[53] = 0;
   out_9041037949999543192[54] = 0;
   out_9041037949999543192[55] = 0;
   out_9041037949999543192[56] = 0;
   out_9041037949999543192[57] = 0;
   out_9041037949999543192[58] = 0;
   out_9041037949999543192[59] = 0;
   out_9041037949999543192[60] = 0;
   out_9041037949999543192[61] = 0;
   out_9041037949999543192[62] = 0;
   out_9041037949999543192[63] = 0;
   out_9041037949999543192[64] = 0;
   out_9041037949999543192[65] = 0;
}
void h_35(double *state, double *unused, double *out_1097865055430795382) {
   out_1097865055430795382[0] = state[7];
   out_1097865055430795382[1] = state[8];
   out_1097865055430795382[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7752911773050654005) {
   out_7752911773050654005[0] = 0;
   out_7752911773050654005[1] = 0;
   out_7752911773050654005[2] = 0;
   out_7752911773050654005[3] = 0;
   out_7752911773050654005[4] = 0;
   out_7752911773050654005[5] = 0;
   out_7752911773050654005[6] = 0;
   out_7752911773050654005[7] = 1;
   out_7752911773050654005[8] = 0;
   out_7752911773050654005[9] = 0;
   out_7752911773050654005[10] = 0;
   out_7752911773050654005[11] = 0;
   out_7752911773050654005[12] = 0;
   out_7752911773050654005[13] = 0;
   out_7752911773050654005[14] = 0;
   out_7752911773050654005[15] = 0;
   out_7752911773050654005[16] = 0;
   out_7752911773050654005[17] = 0;
   out_7752911773050654005[18] = 0;
   out_7752911773050654005[19] = 0;
   out_7752911773050654005[20] = 0;
   out_7752911773050654005[21] = 0;
   out_7752911773050654005[22] = 0;
   out_7752911773050654005[23] = 0;
   out_7752911773050654005[24] = 0;
   out_7752911773050654005[25] = 0;
   out_7752911773050654005[26] = 0;
   out_7752911773050654005[27] = 0;
   out_7752911773050654005[28] = 0;
   out_7752911773050654005[29] = 0;
   out_7752911773050654005[30] = 1;
   out_7752911773050654005[31] = 0;
   out_7752911773050654005[32] = 0;
   out_7752911773050654005[33] = 0;
   out_7752911773050654005[34] = 0;
   out_7752911773050654005[35] = 0;
   out_7752911773050654005[36] = 0;
   out_7752911773050654005[37] = 0;
   out_7752911773050654005[38] = 0;
   out_7752911773050654005[39] = 0;
   out_7752911773050654005[40] = 0;
   out_7752911773050654005[41] = 0;
   out_7752911773050654005[42] = 0;
   out_7752911773050654005[43] = 0;
   out_7752911773050654005[44] = 0;
   out_7752911773050654005[45] = 0;
   out_7752911773050654005[46] = 0;
   out_7752911773050654005[47] = 0;
   out_7752911773050654005[48] = 0;
   out_7752911773050654005[49] = 0;
   out_7752911773050654005[50] = 0;
   out_7752911773050654005[51] = 0;
   out_7752911773050654005[52] = 0;
   out_7752911773050654005[53] = 1;
   out_7752911773050654005[54] = 0;
   out_7752911773050654005[55] = 0;
   out_7752911773050654005[56] = 0;
   out_7752911773050654005[57] = 0;
   out_7752911773050654005[58] = 0;
   out_7752911773050654005[59] = 0;
   out_7752911773050654005[60] = 0;
   out_7752911773050654005[61] = 0;
   out_7752911773050654005[62] = 0;
   out_7752911773050654005[63] = 0;
   out_7752911773050654005[64] = 0;
   out_7752911773050654005[65] = 0;
}
void h_32(double *state, double *unused, double *out_6792077341972714598) {
   out_6792077341972714598[0] = state[3];
   out_6792077341972714598[1] = state[4];
   out_6792077341972714598[2] = state[5];
   out_6792077341972714598[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7884076557991394474) {
   out_7884076557991394474[0] = 0;
   out_7884076557991394474[1] = 0;
   out_7884076557991394474[2] = 0;
   out_7884076557991394474[3] = 1;
   out_7884076557991394474[4] = 0;
   out_7884076557991394474[5] = 0;
   out_7884076557991394474[6] = 0;
   out_7884076557991394474[7] = 0;
   out_7884076557991394474[8] = 0;
   out_7884076557991394474[9] = 0;
   out_7884076557991394474[10] = 0;
   out_7884076557991394474[11] = 0;
   out_7884076557991394474[12] = 0;
   out_7884076557991394474[13] = 0;
   out_7884076557991394474[14] = 0;
   out_7884076557991394474[15] = 0;
   out_7884076557991394474[16] = 0;
   out_7884076557991394474[17] = 0;
   out_7884076557991394474[18] = 0;
   out_7884076557991394474[19] = 0;
   out_7884076557991394474[20] = 0;
   out_7884076557991394474[21] = 0;
   out_7884076557991394474[22] = 0;
   out_7884076557991394474[23] = 0;
   out_7884076557991394474[24] = 0;
   out_7884076557991394474[25] = 0;
   out_7884076557991394474[26] = 1;
   out_7884076557991394474[27] = 0;
   out_7884076557991394474[28] = 0;
   out_7884076557991394474[29] = 0;
   out_7884076557991394474[30] = 0;
   out_7884076557991394474[31] = 0;
   out_7884076557991394474[32] = 0;
   out_7884076557991394474[33] = 0;
   out_7884076557991394474[34] = 0;
   out_7884076557991394474[35] = 0;
   out_7884076557991394474[36] = 0;
   out_7884076557991394474[37] = 0;
   out_7884076557991394474[38] = 0;
   out_7884076557991394474[39] = 0;
   out_7884076557991394474[40] = 0;
   out_7884076557991394474[41] = 0;
   out_7884076557991394474[42] = 0;
   out_7884076557991394474[43] = 0;
   out_7884076557991394474[44] = 0;
   out_7884076557991394474[45] = 0;
   out_7884076557991394474[46] = 0;
   out_7884076557991394474[47] = 0;
   out_7884076557991394474[48] = 0;
   out_7884076557991394474[49] = 1;
   out_7884076557991394474[50] = 0;
   out_7884076557991394474[51] = 0;
   out_7884076557991394474[52] = 0;
   out_7884076557991394474[53] = 0;
   out_7884076557991394474[54] = 0;
   out_7884076557991394474[55] = 0;
   out_7884076557991394474[56] = 0;
   out_7884076557991394474[57] = 0;
   out_7884076557991394474[58] = 0;
   out_7884076557991394474[59] = 0;
   out_7884076557991394474[60] = 0;
   out_7884076557991394474[61] = 0;
   out_7884076557991394474[62] = 0;
   out_7884076557991394474[63] = 0;
   out_7884076557991394474[64] = 0;
   out_7884076557991394474[65] = 0;
   out_7884076557991394474[66] = 0;
   out_7884076557991394474[67] = 0;
   out_7884076557991394474[68] = 0;
   out_7884076557991394474[69] = 0;
   out_7884076557991394474[70] = 0;
   out_7884076557991394474[71] = 0;
   out_7884076557991394474[72] = 1;
   out_7884076557991394474[73] = 0;
   out_7884076557991394474[74] = 0;
   out_7884076557991394474[75] = 0;
   out_7884076557991394474[76] = 0;
   out_7884076557991394474[77] = 0;
   out_7884076557991394474[78] = 0;
   out_7884076557991394474[79] = 0;
   out_7884076557991394474[80] = 0;
   out_7884076557991394474[81] = 0;
   out_7884076557991394474[82] = 0;
   out_7884076557991394474[83] = 0;
   out_7884076557991394474[84] = 0;
   out_7884076557991394474[85] = 0;
   out_7884076557991394474[86] = 0;
   out_7884076557991394474[87] = 0;
}
void h_13(double *state, double *unused, double *out_625194612726844095) {
   out_625194612726844095[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_625194612726844095[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_625194612726844095[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4592999320050799082) {
   out_4592999320050799082[0] = 0;
   out_4592999320050799082[1] = 0;
   out_4592999320050799082[2] = 0;
   out_4592999320050799082[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4592999320050799082[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4592999320050799082[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4592999320050799082[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4592999320050799082[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4592999320050799082[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4592999320050799082[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4592999320050799082[10] = 0;
   out_4592999320050799082[11] = 0;
   out_4592999320050799082[12] = 0;
   out_4592999320050799082[13] = 0;
   out_4592999320050799082[14] = 0;
   out_4592999320050799082[15] = 0;
   out_4592999320050799082[16] = 0;
   out_4592999320050799082[17] = 0;
   out_4592999320050799082[18] = 0;
   out_4592999320050799082[19] = 0;
   out_4592999320050799082[20] = 0;
   out_4592999320050799082[21] = 0;
   out_4592999320050799082[22] = 0;
   out_4592999320050799082[23] = 0;
   out_4592999320050799082[24] = 0;
   out_4592999320050799082[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4592999320050799082[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4592999320050799082[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4592999320050799082[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4592999320050799082[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4592999320050799082[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4592999320050799082[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4592999320050799082[32] = 0;
   out_4592999320050799082[33] = 0;
   out_4592999320050799082[34] = 0;
   out_4592999320050799082[35] = 0;
   out_4592999320050799082[36] = 0;
   out_4592999320050799082[37] = 0;
   out_4592999320050799082[38] = 0;
   out_4592999320050799082[39] = 0;
   out_4592999320050799082[40] = 0;
   out_4592999320050799082[41] = 0;
   out_4592999320050799082[42] = 0;
   out_4592999320050799082[43] = 0;
   out_4592999320050799082[44] = 0;
   out_4592999320050799082[45] = 0;
   out_4592999320050799082[46] = 0;
   out_4592999320050799082[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4592999320050799082[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4592999320050799082[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4592999320050799082[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4592999320050799082[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4592999320050799082[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4592999320050799082[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4592999320050799082[54] = 0;
   out_4592999320050799082[55] = 0;
   out_4592999320050799082[56] = 0;
   out_4592999320050799082[57] = 0;
   out_4592999320050799082[58] = 0;
   out_4592999320050799082[59] = 0;
   out_4592999320050799082[60] = 0;
   out_4592999320050799082[61] = 0;
   out_4592999320050799082[62] = 0;
   out_4592999320050799082[63] = 0;
   out_4592999320050799082[64] = 0;
   out_4592999320050799082[65] = 0;
}
void h_14(double *state, double *unused, double *out_8101849099089557939) {
   out_8101849099089557939[0] = state[10];
   out_8101849099089557939[1] = state[11];
   out_8101849099089557939[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6773275422767057517) {
   out_6773275422767057517[0] = 0;
   out_6773275422767057517[1] = 0;
   out_6773275422767057517[2] = 0;
   out_6773275422767057517[3] = 0;
   out_6773275422767057517[4] = 0;
   out_6773275422767057517[5] = 0;
   out_6773275422767057517[6] = 0;
   out_6773275422767057517[7] = 0;
   out_6773275422767057517[8] = 0;
   out_6773275422767057517[9] = 0;
   out_6773275422767057517[10] = 1;
   out_6773275422767057517[11] = 0;
   out_6773275422767057517[12] = 0;
   out_6773275422767057517[13] = 0;
   out_6773275422767057517[14] = 0;
   out_6773275422767057517[15] = 0;
   out_6773275422767057517[16] = 0;
   out_6773275422767057517[17] = 0;
   out_6773275422767057517[18] = 0;
   out_6773275422767057517[19] = 0;
   out_6773275422767057517[20] = 0;
   out_6773275422767057517[21] = 0;
   out_6773275422767057517[22] = 0;
   out_6773275422767057517[23] = 0;
   out_6773275422767057517[24] = 0;
   out_6773275422767057517[25] = 0;
   out_6773275422767057517[26] = 0;
   out_6773275422767057517[27] = 0;
   out_6773275422767057517[28] = 0;
   out_6773275422767057517[29] = 0;
   out_6773275422767057517[30] = 0;
   out_6773275422767057517[31] = 0;
   out_6773275422767057517[32] = 0;
   out_6773275422767057517[33] = 1;
   out_6773275422767057517[34] = 0;
   out_6773275422767057517[35] = 0;
   out_6773275422767057517[36] = 0;
   out_6773275422767057517[37] = 0;
   out_6773275422767057517[38] = 0;
   out_6773275422767057517[39] = 0;
   out_6773275422767057517[40] = 0;
   out_6773275422767057517[41] = 0;
   out_6773275422767057517[42] = 0;
   out_6773275422767057517[43] = 0;
   out_6773275422767057517[44] = 0;
   out_6773275422767057517[45] = 0;
   out_6773275422767057517[46] = 0;
   out_6773275422767057517[47] = 0;
   out_6773275422767057517[48] = 0;
   out_6773275422767057517[49] = 0;
   out_6773275422767057517[50] = 0;
   out_6773275422767057517[51] = 0;
   out_6773275422767057517[52] = 0;
   out_6773275422767057517[53] = 0;
   out_6773275422767057517[54] = 0;
   out_6773275422767057517[55] = 0;
   out_6773275422767057517[56] = 1;
   out_6773275422767057517[57] = 0;
   out_6773275422767057517[58] = 0;
   out_6773275422767057517[59] = 0;
   out_6773275422767057517[60] = 0;
   out_6773275422767057517[61] = 0;
   out_6773275422767057517[62] = 0;
   out_6773275422767057517[63] = 0;
   out_6773275422767057517[64] = 0;
   out_6773275422767057517[65] = 0;
}
void h_33(double *state, double *unused, double *out_655443362248511566) {
   out_655443362248511566[0] = state[16];
   out_655443362248511566[1] = state[17];
   out_655443362248511566[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7543275296020040007) {
   out_7543275296020040007[0] = 0;
   out_7543275296020040007[1] = 0;
   out_7543275296020040007[2] = 0;
   out_7543275296020040007[3] = 0;
   out_7543275296020040007[4] = 0;
   out_7543275296020040007[5] = 0;
   out_7543275296020040007[6] = 0;
   out_7543275296020040007[7] = 0;
   out_7543275296020040007[8] = 0;
   out_7543275296020040007[9] = 0;
   out_7543275296020040007[10] = 0;
   out_7543275296020040007[11] = 0;
   out_7543275296020040007[12] = 0;
   out_7543275296020040007[13] = 0;
   out_7543275296020040007[14] = 0;
   out_7543275296020040007[15] = 0;
   out_7543275296020040007[16] = 1;
   out_7543275296020040007[17] = 0;
   out_7543275296020040007[18] = 0;
   out_7543275296020040007[19] = 0;
   out_7543275296020040007[20] = 0;
   out_7543275296020040007[21] = 0;
   out_7543275296020040007[22] = 0;
   out_7543275296020040007[23] = 0;
   out_7543275296020040007[24] = 0;
   out_7543275296020040007[25] = 0;
   out_7543275296020040007[26] = 0;
   out_7543275296020040007[27] = 0;
   out_7543275296020040007[28] = 0;
   out_7543275296020040007[29] = 0;
   out_7543275296020040007[30] = 0;
   out_7543275296020040007[31] = 0;
   out_7543275296020040007[32] = 0;
   out_7543275296020040007[33] = 0;
   out_7543275296020040007[34] = 0;
   out_7543275296020040007[35] = 0;
   out_7543275296020040007[36] = 0;
   out_7543275296020040007[37] = 0;
   out_7543275296020040007[38] = 0;
   out_7543275296020040007[39] = 1;
   out_7543275296020040007[40] = 0;
   out_7543275296020040007[41] = 0;
   out_7543275296020040007[42] = 0;
   out_7543275296020040007[43] = 0;
   out_7543275296020040007[44] = 0;
   out_7543275296020040007[45] = 0;
   out_7543275296020040007[46] = 0;
   out_7543275296020040007[47] = 0;
   out_7543275296020040007[48] = 0;
   out_7543275296020040007[49] = 0;
   out_7543275296020040007[50] = 0;
   out_7543275296020040007[51] = 0;
   out_7543275296020040007[52] = 0;
   out_7543275296020040007[53] = 0;
   out_7543275296020040007[54] = 0;
   out_7543275296020040007[55] = 0;
   out_7543275296020040007[56] = 0;
   out_7543275296020040007[57] = 0;
   out_7543275296020040007[58] = 0;
   out_7543275296020040007[59] = 0;
   out_7543275296020040007[60] = 0;
   out_7543275296020040007[61] = 0;
   out_7543275296020040007[62] = 1;
   out_7543275296020040007[63] = 0;
   out_7543275296020040007[64] = 0;
   out_7543275296020040007[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2823155123848402991) {
  H(in_vec, out_2823155123848402991);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7226446291374266530) {
  err_fun(nom_x, delta_x, out_7226446291374266530);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3650096757331326943) {
  inv_err_fun(nom_x, true_x, out_3650096757331326943);
}
void live_H_mod_fun(double *state, double *out_1017595647546641607) {
  H_mod_fun(state, out_1017595647546641607);
}
void live_f_fun(double *state, double dt, double *out_1572252167703847428) {
  f_fun(state,  dt, out_1572252167703847428);
}
void live_F_fun(double *state, double dt, double *out_4661722811712315816) {
  F_fun(state,  dt, out_4661722811712315816);
}
void live_h_4(double *state, double *unused, double *out_301170939575007164) {
  h_4(state, unused, out_301170939575007164);
}
void live_H_4(double *state, double *unused, double *out_4386249715678046629) {
  H_4(state, unused, out_4386249715678046629);
}
void live_h_9(double *state, double *unused, double *out_8101849099089557939) {
  h_9(state, unused, out_8101849099089557939);
}
void live_H_9(double *state, double *unused, double *out_6773275422767057517) {
  H_9(state, unused, out_6773275422767057517);
}
void live_h_10(double *state, double *unused, double *out_2439254096414030147) {
  h_10(state, unused, out_2439254096414030147);
}
void live_H_10(double *state, double *unused, double *out_347608672828194809) {
  H_10(state, unused, out_347608672828194809);
}
void live_h_12(double *state, double *unused, double *out_4212404837284500669) {
  h_12(state, unused, out_4212404837284500669);
}
void live_H_12(double *state, double *unused, double *out_9041037949999543192) {
  H_12(state, unused, out_9041037949999543192);
}
void live_h_35(double *state, double *unused, double *out_1097865055430795382) {
  h_35(state, unused, out_1097865055430795382);
}
void live_H_35(double *state, double *unused, double *out_7752911773050654005) {
  H_35(state, unused, out_7752911773050654005);
}
void live_h_32(double *state, double *unused, double *out_6792077341972714598) {
  h_32(state, unused, out_6792077341972714598);
}
void live_H_32(double *state, double *unused, double *out_7884076557991394474) {
  H_32(state, unused, out_7884076557991394474);
}
void live_h_13(double *state, double *unused, double *out_625194612726844095) {
  h_13(state, unused, out_625194612726844095);
}
void live_H_13(double *state, double *unused, double *out_4592999320050799082) {
  H_13(state, unused, out_4592999320050799082);
}
void live_h_14(double *state, double *unused, double *out_8101849099089557939) {
  h_14(state, unused, out_8101849099089557939);
}
void live_H_14(double *state, double *unused, double *out_6773275422767057517) {
  H_14(state, unused, out_6773275422767057517);
}
void live_h_33(double *state, double *unused, double *out_655443362248511566) {
  h_33(state, unused, out_655443362248511566);
}
void live_H_33(double *state, double *unused, double *out_7543275296020040007) {
  H_33(state, unused, out_7543275296020040007);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
